{"version":3,"sources":["components/card.jsx","services/cards.js","components/cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","card","name","surname","validUntil","cardNumber","baseUrl","getAll","a","axios","get","data","Cards","useState","cards","setCards","useEffect","getAllCards","newCards","console","log","error","length","map","c","id","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiBeA,EAfF,SAACC,GACZ,OACE,gCACE,+BACGA,EAAKC,KADR,IACeD,EAAKE,WAEpB,8BACE,8BACGF,EAAKG,WADR,KACsBH,EAAKI,oB,gBCT7BC,EAAU,kCAEHC,EAAM,uCAAG,sBAAAC,EAAA,sEACPC,IAAMC,IAAIJ,GAASK,KADZ,mFAAH,qDCwBJC,EAvBD,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACN,IAAMC,EAAW,uCAAG,4BAAAT,EAAA,+EAEWD,IAFX,OAENW,EAFM,OAGZC,QAAQC,IAAIF,GACZH,EAASG,GAJG,gDAMZC,QAAQE,MAAR,MANY,yDAAH,qDASjBJ,MACD,IAEI,mCAAGH,GAASA,EAAMQ,OAAS,EAC9BR,EAAMS,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAiBvB,KAAMuB,GAAZA,EAAEC,OAE9B,oDCbOC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.967087c9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (card) => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {card.name} {card.surname}\r\n      </h1>\r\n      <div>\r\n        <p>\r\n          {card.validUntil}, {card.cardNumber}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/api/cards\";\r\n\r\nexport const getAll = async () => {\r\n  return await axios.get(baseUrl).data;\r\n};\r\n\r\nexport const create = async (newObject) => {\r\n  return await axios.post(baseUrl, newObject).data;\r\n};\r\n\r\nexport const update = async (id, newObject) => {\r\n  return await axios.put(`${baseUrl}/${id}`, newObject).data;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"./card\";\r\nimport { getAll } from \"../services/cards\";\r\n\r\nconst Cards = () => {\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getAllCards = async () => {\r\n            try {\r\n                const newCards = await getAll();\r\n                console.log(newCards);\r\n                setCards(newCards);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        getAllCards();\r\n    }, []);\r\n\r\n    return <>{cards && cards.length > 0 ? (\r\n        cards.map((c) => <Card key={c.id} card={c} />)\r\n    ) : (\r\n        <div>no cards found</div>\r\n    )}</>\r\n}\r\n\r\nexport default Cards;","import \"./App.css\";\nimport Cards from \"./components/cards\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}